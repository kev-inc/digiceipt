{"version":3,"sources":["components/Nav.js","components/Home.js","mockdata/receipts.js","components/History.js","components/Login.js","components/Welcome.js","components/Scanner.js","components/Receipt.js","components/ViewReceipt.js","components/ConfirmReceipt.js","components/OcrResult.js","components/Ocr.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","Link","to","Home","receipts","shopName","shopBranch","GST","pax","table","items","qty","name","price","subtotal","total","date","Date","BRN","optional","desc","svc","gst","History","map","item","index","key","toLocaleDateString","Login","type","placeholder","Welcome","Scanner","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","delay","result","handleScan","bind","assertThisInitialized","handleError","data","setState","err","console","log","lib_default","onError","onScan","style","width","React","Component","Receipt","receipt","toFixed","opt","ViewReceipt","components_Receipt","match","params","receiptId","ConfirmReceipt","onClick","alert","OcrResult","ocrState","toLocaleUpperCase","concat","percentCompleted","scanAgain","Ocr","setRef","webcam","capture","imageSrc","getScreenshot","Image","src","scanPicture","progressCompleted","picture","_this2","tesseract","window","Tesseract","recognize","lang","progress","message","status","then","text","react_webcam_default","audio","ref","videoConstraints","facingMode","exact","screenshotFormat","components_OcrResult","App","HashRouter","components_Nav","Switch","Route","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b952f53d.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst Nav = (props) => (\n    <div className=\"Nav\">\n        <nav className=\"navbar navbar-light bg-light fixed-top\">\n            <Link to='/' className=\"navbar-brand\">Digiceipt</Link>\n            <ul className=\"nav navbar-nav navbar-right\">\n                <Link className='btn btn-light' to='/home'><i className=\"fas fa-home\"></i></Link>\n            </ul>\n        </nav>\n        <nav className=\"navbar navbar-light bg-light\">\n            <span className=\"navbar-brand\">Digiceipt</span>\n        </nav>\n    </div>\n);\n\nexport default Nav","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Home = (props) => (\n    <div className=\"Home container\">\n        <div className=\"welcome m-3 p-3 shadow-sm bg-primary text-light\">\n            <h4>Welcome back,<br/>Kevin</h4>\n        </div>\n        <div className=\"actions m-2 row\">\n            <Link className=\"shadow-sm btn bg-success col p-2 m-2 text-light\" to='/scan'><i className=\"fas fa-qrcode\"></i><br/>Add new receipt</Link>\n            <Link className=\"shadow-sm btn bg-warning col p-2 m-2 text-light\" to='/history'><i className=\"fas fa-history\"></i><br/>View previous receipts</Link>\n        </div>\n    </div>\n)\n\nexport default Home","export const receipts = [\n    {\n        shopName: \"GONG CHA\",\n        shopBranch: \"Fine Foods @ NUS UTown\",\n        GST: \"M-201009405\",\n        pax: 1,\n        table: 0,\n        items: [\n            {\n                qty: 1,\n                name: \"MT w Pearl (Cold)\",\n                price: 3\n            },\n            {\n                qty: 1,\n                name: \"Hazelnut Milk Tea\",\n                price: 4.50\n            }\n        ],\n        subtotal: 7.50,\n        total: 7.50,\n        date: new Date(\"2018-12-15\")\n    },\n    {\n        shopName: \"Harry's International Pte Ltd\",\n        shopBranch: \"Harry's @ Clarke Quay\",\n        GST: \"M-201009405\",\n        BRN: \"199103579R\",\n        pax: 2,\n        table: 7,\n        items: [\n            {\n                qty: 1,\n                name: \"BBQ BABY BACK RIBS\",\n                price: 29.00,\n                optional: [\n                    {\n                        desc: \"EATIGO 50%\",\n                        price: -14.50\n                    }\n                ]\n            },\n            {\n                qty: 1,\n                name: \"CRANBERRY JUICE\",\n                price: 6.00\n            },\n            {\n                qty: 1,\n                name: \"JAZZ BURGER\",\n                price: 22.00,\n                optional: [\n                    {\n                        desc: \"EATIGO 50%\",\n                        price: -11\n                    }\n                ]\n            },\n        ],\n        subtotal: 31.50,\n        svc: 3.15,\n        gst: 2.43,\n        total: 37.08,\n        date: new Date(\"2018-12-13\")\n    }\n]","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { receipts } from '../mockdata/receipts'\n\nconst History = (props) => (\n     <div className=\"History p-4\">\n        <h3 className=\"font-weight-light\">Past receipts</h3>\n        {receipts.map((item, index) => {\n            return <div className=\"receipts\" key={index}>\n                <div className='shadow-sm p-3 m-2 text-left'>\n                    {item.shopName}\n                    <span className=\"float-right\">\n                        <Link className=\"btn btn-light\" to={`/view/` + index}>\n                            <i className=\"fas fa-external-link-alt\"></i>\n                        </Link>\n                    </span>\n                    <br/>\n                    Date issued: {item.date.toLocaleDateString(\"en-SG\")}\n                </div>\n            </div>\n        })}\n        \n    </div>\n)\n\nexport default History","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Login = (props) => (\n    <div className=\"Login m-4\">\n        <div className=\"h3 mb-3\">Log in to Digiceipt</div>\n        <div className=\"input-group mb-3\">\n            <input type=\"text\" className=\"form-control\" placeholder=\"Email Address\" />\n        </div>\n        <div className=\"input-group mb-3\">\n            <input type=\"password\" className=\"form-control\" placeholder=\"Password\" />\n        </div>\n        <Link className=\"btn btn-success btn-lg\" to='/home'>Log in</Link>\n        <p>Just click on log in don't need to enter anything</p>\n    </div>\n)\n\nexport default Login","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Welcome = (props) => (\n    <div className=\"Welcome p-4\">\n        <div className=\"welcome m-2\">\n            <h3>Welcome to Digiceipt!</h3>\n            <h4 className=\"font-weight-light text-muted\">Your one stop for all your receipts!</h4>\n        </div>\n        <hr/>\n        <div className=\"actions m-2\">\n            <Link className=\"btn btn-primary btn-lg m-2\" to='/login'><i className=\"fas fa-play-circle\"></i> Get started</Link><br/>\n        </div>\n    </div>\n)\n\nexport default Welcome","import React from 'react'\nimport QrReader from 'react-qr-reader'\nimport {Link} from 'react-router-dom'\n\nclass Scanner extends React.Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            delay: 300,\n            result: \"No result\"\n        }\n        this.handleScan = this.handleScan.bind(this)\n        this.handleError = this.handleError.bind(this)\n    }\n\n    handleScan(data) {\n        if (data) {\n            this.setState({result: data})\n        }\n    }\n    handleError(err) {\n        console.log(err)\n    }\n\n    render() {\n        return(\n            <div className=\"Scanner p-4\">\n                <h3 className=\"font-weight-light\">Scan new receipt</h3>\n                <QrReader\n                    delay={this.state.delay}\n                    onError={this.handleError}\n                    onScan={this.handleScan}\n                    style={{width: '100%'}}\n                />\n                <p>For testing only:</p>\n                <Link to='/confirm/0' className='btn btn-primary btn-block'>gongcha</Link>\n                <Link to='/confirm/1' className='btn btn-primary btn-block'>harry's</Link>\n                <Link to='/ocr' className='btn btn-danger btn-block'>Manual Scan</Link>\n            </div>\n        )\n    }\n}\nexport default Scanner","import React from 'react'\n\nconst Receipt = (props) => (\n    <div className=\"Receipt\">\n        <pre>\n            <div className=\"top\">\n                {props.receipt.shopName}<br/>\n                {props.receipt.shopBranch}<br/>\n                GST NO: {props.receipt.GST}<br/>\n                <br/>\n                Pax:{props.receipt.pax} TABLE: {props.receipt.table} <br/>\n            </div>\n            <hr/>\n            <div className=\"middle text-left\">\n                {props.receipt.items.map((item, index) => {\n                    return <div key={index}>\n                        <span>\n                            {item.qty} {item.name}\n                        </span>\n                        <span className=\"float-right\">${item.price.toFixed(2)}</span>\n                        {item.optional ? item.optional.map((opt, index) => {\n                            return <div key={index}>\n                                {opt.desc} <span className='float-right'>${opt.price.toFixed(2)}</span>\n                                <br/>\n                            </div> \n                        }) : (null)}\n                    </div>\n                })}\n                <hr/>\n                SUBTOTAL<span className=\"float-right\">${props.receipt.subtotal.toFixed(2)}</span><br/>\n                {props.receipt.svc ? <span>SVC CHG<span className=\"float-right\">${props.receipt.svc.toFixed(2)}</span><br/></span> : (null)}\n                {props.receipt.gst ? <span>GST<span className=\"float-right\">${props.receipt.gst.toFixed(2)}</span></span> : (null) }\n                <hr/>\n                <span className=\"font-weight-bold\">TOTAL<span className=\"float-right\">${props.receipt.total.toFixed(2)}</span></span>\n                <hr/>\n                <div className=\"text-center\">--- END ---</div>\n            </div>\n        </pre>\n    </div>\n)\n\n\nexport default Receipt","import React from 'react'\nimport Receipt from './Receipt'\nimport {receipts} from '../mockdata/receipts'\nimport {Link} from 'react-router-dom'\n\nconst ViewReceipt = props => (\n    <div className=\"ViewReceipt p-4\">\n        <div className='shadow-sm mb-4 p-4'>\n            <Receipt receipt={receipts[props.match.params.receiptId]}></Receipt>\n        </div>\n        <Link className=\"btn btn-danger btn-block\" to='/history'>Back</Link>\n    </div>\n)\n\nexport default ViewReceipt","import React from 'react'\nimport Receipt from './Receipt'\nimport {receipts} from '../mockdata/receipts'\nimport {Link} from 'react-router-dom'\n\nfunction added() {\n    alert(\"Receipt successfully added!\");\n}\n\nconst ConfirmReceipt = props => (\n    <div className=\"ConfirmReceipt p-4 container\">\n        <h3 className=\"font-weight-light\">Add this receipt?</h3>\n        <div className='shadow-sm mb-4 p-4'>\n            <Receipt receipt={receipts[props.match.params.receiptId]}></Receipt>\n        </div>\n        <div className=\"row\">\n            <Link className=\"btn btn-secondary m-2 col\" to='/scan'>Cancel</Link>\n            <Link className=\"btn btn-success m-2 col\" onClick={()=>added()} to='/history'>Add</Link>\n        </div>\n    </div>\n)\n\nexport default ConfirmReceipt","import React from 'react'\n\nconst OcrResult = props => (\n    <div className=\"OcrResult\">\n        <div className=\"status\">\n            <span>{props.ocrState.toLocaleUpperCase()}</span>\n        </div>\n        <div className=\"progress\">\n            <div className=\"progress-bar\" style={{width: `${props.percentCompleted*100}%`}}></div>\n        </div>\n        <div className=\"result\">\n            <pre>\n                {props.result}\n            </pre>\n        </div>\n        <button className=\"btn btn-danger btn-block\" onClick={props.scanAgain}>Scan again</button>\n    </div>\n)\n\nexport default OcrResult","import React from 'react'\nimport Webcam from 'react-webcam'\nimport OcrResult from './OcrResult';\n\nclass Ocr extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            ocrState:\"\",\n            percentCompleted: 0,\n            result: \"\",\n            state: 0\n        }\n    }\n\n    setRef = webcam => {\n        this.webcam = webcam\n    }\n\n    capture = () => {\n        const imageSrc = this.webcam.getScreenshot()\n        var image = new Image()\n        image.src = imageSrc\n        this.scanPicture(imageSrc)\n    }\n\n    scanPicture(picture) {\n        let tesseract = window.Tesseract\n        console.log(tesseract)\n        tesseract.recognize(picture, {\n            lang: 'eng'\n        })\n            .progress(message => {\n                this.setState({ocrState: message.status, state: 1})\n                if(message.status === \"recognizing text\") {\n                    this.setState({percentCompleted: message.progress})\n                }\n                console.log(\"% completed: \", message)\n            })\n            .then(result => {\n                console.log(result)\n                this.setState({result: result.text})\n            })\n    }\n    scanAgain = () => {\n        this.setState({\n            ocrState:\"\",\n            progressCompleted: 0,\n            result: \"\",\n            state: 0})\n    }\n\n    render() {\n        const videoConstraints = {\n            facingMode: {exact: \"environment\"}\n        }\n        return(\n            <div className='Ocr p-4'>\n                {this.state.state === 0 ? \n                    <div className=\"camera\">\n                        <Webcam \n                            audio={false} \n                            width='100%'\n                            ref={this.setRef} \n                            videoConstraints={videoConstraints}\n                            screenshotFormat=\"image/jpeg\"\n                            ></Webcam>\n                        <button className=\"btn btn-success btn-block\" onClick={this.capture}>Capture</button>\n                        \n                    </div>\n                    :\n                    <OcrResult ocrState={this.state.ocrState}\n                        percentCompleted={this.state.percentCompleted}\n                        result={this.state.result}\n                        scanAgain = {this.scanAgain}/>\n                }\n                \n                \n                \n\n            </div>\n        )\n    }\n}\n\nexport default Ocr","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport Nav from './components/Nav'\nimport Home from './components/Home'\nimport History from './components/History'\nimport Login from './components/Login'\nimport Welcome from './components/Welcome'\nimport Scanner from './components/Scanner'\nimport ViewReceipt from './components/ViewReceipt'\nimport ConfirmReceipt from './components/ConfirmReceipt'\nimport Ocr from './components/Ocr'\nimport OcrResult from './components/OcrResult'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <Nav />\n          <Switch>\n            <Route path='/' exact component={Welcome} />\n            <Route path='/history' component={History} />\n            <Route path='/login' component={Login} />\n            <Route path='/home' component={Home} />\n            <Route path='/scan' component={Scanner} />\n            <Route path='/view/:receiptId' component={ViewReceipt} />\n            <Route path='/confirm/:receiptId' component={ConfirmReceipt} />\n            <Route path='/ocr' component={Ocr}/>\n            <Route path='/ocrresult' component={OcrResult}/>\n          </Switch>\n\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}